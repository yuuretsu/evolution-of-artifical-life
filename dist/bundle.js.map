{"version":3,"sources":["webpack://artifical-life/./lib/Bot.ts","webpack://artifical-life/./lib/Grid.ts","webpack://artifical-life/./lib/drawing.ts","webpack://artifical-life/./lib/math-functions.ts","webpack://artifical-life/./lib/world.ts","webpack://artifical-life/webpack/bootstrap","webpack://artifical-life/webpack/runtime/define property getters","webpack://artifical-life/webpack/runtime/hasOwnProperty shorthand","webpack://artifical-life/webpack/runtime/make namespace object","webpack://artifical-life/./index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["import { Rgba } from \"./drawing\";\r\nimport { fixNumber, limNumber, randChoice, randFloat, randInt } from \"./math-functions\";\r\nimport { Block, DynamicBlock, World } from \"./world\";\r\n\r\nexport default class Bot extends DynamicBlock {\r\n    static amount = 0;\r\n    private _narrow: number;\r\n    age: number;\r\n    constructor(\r\n        world: World,\r\n        x: number,\r\n        y: number,\r\n        color: Rgba,\r\n        public energy: number,\r\n        public genome: Genome,\r\n        public family: Rgba,\r\n        public abilities: {\r\n            photo: number,\r\n            attack: number\r\n        }\r\n    ) {\r\n        super(world, x, y, color);\r\n        Bot.amount++;\r\n        this._narrow = randInt(0, 8);\r\n        this.age = 0;\r\n    }\r\n    set narrow(n: number) {\r\n        this._narrow = fixNumber(0, 8, n);\r\n    }\r\n    get narrow(): number {\r\n        return this._narrow;\r\n    }\r\n    narrowToCoords(): [number, number] {\r\n        //   0 1 2\r\n        //   7   3\r\n        //   6 5 4\r\n        const coords = [\r\n            [-1, -1],\r\n            [0, -1],\r\n            [1, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [-1, 1],\r\n            [-1, 0],\r\n        ];\r\n        const x = this.x + coords[this.narrow][0];\r\n        const y = this.y + coords[this.narrow][1];\r\n        return [x, y];\r\n    }\r\n    getForvard() {\r\n        const coords = this.world.fixCoords(...this.narrowToCoords());\r\n        return { block: this.world.get(...coords), coords: coords };\r\n    }\r\n    moveTo(x: number, y: number) {\r\n        this.world.swap(this.x, this.y, x, y);\r\n    }\r\n    multiplyTo(x: number, y: number) {\r\n        new Bot(\r\n            this.world,\r\n            x,\r\n            y,\r\n            this.color.interpolate(new Rgba(255, 255, 255, 255), 0.25),\r\n            this.energy / 3,\r\n            this.genome.replication(),\r\n            this.family.mutateRgb(10),\r\n            { ...this.abilities }\r\n        );\r\n        this.energy /= 3;\r\n    }\r\n    randMove() {\r\n        const coords = this.world.fixCoords(\r\n            this.x + randInt(-1, 2),\r\n            this.y + randInt(-1, 2)\r\n        );\r\n        this.moveTo(...coords);\r\n    }\r\n    onStep() {\r\n        if (this.energy < 1 || this.energy > 100 || this.age > 2000) {\r\n            this.alive = false;\r\n            return;\r\n        }\r\n        this.genome.doAction(this);\r\n        this.energy -= 0.1;\r\n        this.age += 1;\r\n    }\r\n    onDie() {\r\n        Bot.amount--;\r\n        new DeadBot(this);\r\n    }\r\n}\r\n\r\nclass DeadBot extends DynamicBlock {\r\n    constructor(bot: Bot) {\r\n        super(bot.world, bot.x, bot.y, bot.color.interpolate(new Rgba(0, 0, 0, 255), 0.5));\r\n    }\r\n    onStep() {\r\n        this.color = this.color.interpolate(new Rgba(10, 10, 50, 255), 0.001);\r\n    }\r\n}\r\n\r\nexport class Genome {\r\n    genes: Gene[];\r\n    private _pointer: number;\r\n    constructor(readonly length: number) {\r\n        this.genes = [];\r\n        this._pointer = 0;\r\n    }\r\n    set pointer(n: number) {\r\n        this._pointer = fixNumber(0, this.length, n);\r\n    }\r\n    get pointer() {\r\n        return this._pointer;\r\n    }\r\n    randGene(): Gene {\r\n        return {\r\n            action: randChoice(GENE_TEMPLATES),\r\n            property: Math.random(),\r\n            branches: [\r\n                randInt(0, this.length),\r\n                randInt(0, this.length),\r\n                randInt(0, this.length),\r\n                randInt(0, this.length)\r\n            ]\r\n        };\r\n    }\r\n    mutateGene(gene: Gene): Gene {\r\n        return {\r\n            action: Math.random() > 0.9 ? randChoice(GENE_TEMPLATES) : gene.action,\r\n            property: limNumber(0, 1, gene.property + randFloat(-0.01, 0.01)),\r\n            branches: gene.branches.map(\r\n                i => Math.random() > 0.9\r\n                    ? randInt(0, this.length)\r\n                    : i\r\n            ) as [number, number, number, number]\r\n        }\r\n    }\r\n    fillRandom() {\r\n        for (let i = 0; i < this.length; i++) {\r\n            this.genes[i] = this.randGene();\r\n        }\r\n        return this;\r\n    }\r\n    fillPlant() {\r\n        for (let i = 0; i < this.length; i++) {\r\n            this.genes[i] = {\r\n                action: GENE_TEMPLATES[randInt(0, 3)],\r\n                property: Math.random(),\r\n                branches: [\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length)\r\n                ]\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    // replication2() {\r\n    //     const genome = new Genome(this.length);\r\n    //     for (let i = 0; i < this.length; i++) {\r\n    //         genome.genes[i] = this.mutateGene(this.genes[i]);\r\n    //     }\r\n    //     return genome;\r\n    // }\r\n    // replication() {\r\n    //     const genome = new Genome(this.length);\r\n    //     for (let i = 0; i < this.length; i++) {\r\n    //         genome.genes[i] = this.genes[i];\r\n    //     }\r\n    //     const pointer = randInt(0, genome.length);\r\n    //     genome.genes[pointer] = this.mutateGene(this.genes[pointer]);\r\n    //     return genome;\r\n    // }\r\n    replication() {\r\n        const genome = new Genome(this.length);\r\n        for (let i = 0; i < this.length; i++) {\r\n            genome.genes[i] = Math.random() > 0.995\r\n                ? this.mutateGene(this.genes[i])\r\n                : this.genes[i];\r\n        }\r\n        return genome;\r\n    }\r\n    doAction(bot: Bot) {\r\n        for (let i = 0; i < 20; i++) {\r\n            const GENE: Gene = this.genes[this.pointer];\r\n            const RESULT = GENE.action(bot, GENE.property, GENE.branches);\r\n            if (RESULT.goto) {\r\n                this.pointer = RESULT.goto;\r\n            } else {\r\n                this.pointer++;\r\n            }\r\n            if (RESULT.completed) return;\r\n        }\r\n        bot.color = bot.color.interpolate(new Rgba(100, 100, 100, 255), 0.1);\r\n    }\r\n}\r\n\r\ntype ActionResult = { completed: boolean, goto?: number }\r\n\r\ntype ActionFn = (\r\n    bot: Bot,\r\n    property: number,\r\n    branches: [number, number, number, number]\r\n) => ActionResult;\r\n\r\ntype Gene = {\r\n    action: ActionFn,\r\n    property: number,\r\n    branches: [number, number, number, number]\r\n}\r\n\r\nconst GENE_TEMPLATES: ActionFn[] = [\r\n    // Photosynthesis\r\n    (bot, property, branches) => {\r\n        bot.energy += 0.5 * bot.abilities.photo ** 2;\r\n        bot.abilities.photo = Math.min(1, bot.abilities.photo + 0.01);\r\n        bot.abilities.attack = Math.max(0, bot.abilities.attack - 0.01);\r\n        bot.color = bot.color.interpolate(new Rgba(0, 255, 0, 255), 0.01);\r\n        return { completed: true }\r\n    },\r\n    // Rotate\r\n    (bot, property, branches) => {\r\n        if (property > 0.5) {\r\n            bot.narrow++;\r\n        } else {\r\n            bot.narrow--;\r\n        }\r\n        return { completed: false }\r\n    },\r\n    // Multiply\r\n    (bot, property, branches) => {\r\n        const forward = bot.getForvard();\r\n        if (!forward.block && bot.age > 2) {\r\n            bot.multiplyTo(...forward.coords);\r\n        }\r\n        return { completed: true }\r\n    },\r\n    // Share energy\r\n    (bot, property, branches) => {\r\n        bot.color = bot.color.interpolate(new Rgba(0, 0, 255, 255), 0.005);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot && forward.block.energy < bot.energy) {\r\n            const E = (forward.block.energy + bot.energy) / 2;\r\n            bot.energy = E;\r\n            forward.block.energy = E;\r\n        }\r\n        return { completed: true }\r\n    },\r\n    // Look forward\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(255, 255, 255, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot) {\r\n            if (forward.block.family.difference(bot.color) < property) {\r\n                return { completed: false, goto: branches[0] }\r\n            } else {\r\n                return { completed: false, goto: branches[1] }\r\n            }\r\n        } else if (forward.block instanceof DeadBot) {\r\n            return { completed: false, goto: branches[2] }\r\n        } else {\r\n            return { completed: false, goto: branches[3] }\r\n        }\r\n    },\r\n    (bot, property, branches) => {\r\n        if (bot.energy / 100 < property) {\r\n            return { completed: false, goto: branches[0] }\r\n        } else {\r\n            return { completed: false, goto: branches[1] }\r\n        }\r\n    },\r\n    // DestroyDead\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(0, 0, 255, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof DeadBot) {\r\n            forward.block.alive = false;\r\n        }\r\n        return { completed: true }\r\n    },\r\n    // Move\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(255, 0, 0, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (!forward.block) bot.moveTo(...forward.coords);\r\n        return { completed: true }\r\n    },\r\n    // // Move 2\r\n    // (bot, property, branches) => {\r\n    //     // bot.color = bot.color.interpolate(new Rgba(255, 255, 255, 255), 0.01);\r\n    //     const forward = bot.getForvard();\r\n    //     bot.moveTo(...forward.coords);\r\n    //     bot.energy -= 0.1;\r\n    //     return { completed: true }\r\n    // },\r\n    // Kill\r\n    (bot, property, branches) => {\r\n        bot.energy -= 0.1;\r\n        bot.color = bot.color.interpolate(new Rgba(255, 0, 0, 255), 0.01);\r\n        bot.abilities.attack = Math.min(1, bot.abilities.attack + 0.01);\r\n        bot.abilities.photo = Math.max(0, bot.abilities.photo - 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot) {\r\n            const E = (forward.block.energy / 3) * bot.abilities.attack ** 2;\r\n            forward.block.energy -= E;\r\n            bot.energy += E;\r\n        }\r\n        return { completed: true }\r\n    },\r\n];","import { fixNumber, randInt } from \"./math-functions\";\r\n\r\nexport default class Grid<T> {\r\n    private readonly cells: (T | undefined)[][];\r\n    constructor(readonly width: number, readonly height: number) {\r\n        this.cells = [];\r\n        for (let x = 0; x < width; x++) {\r\n            this.cells[x] = [];\r\n        }\r\n    }\r\n    get(x: number, y: number): T | undefined {\r\n        return this.cells[x][y];\r\n    }\r\n    set(x: number, y: number, value: T | undefined) {\r\n        this.cells[x][y] = value;\r\n    }\r\n    remove(x: number, y: number) {\r\n        delete this.cells[x][y];\r\n    }\r\n    swap(x: number, y: number, x2: number, y2: number) {\r\n        const bufferA = this.get(x, y);\r\n        const bufferB = this.get(x2, y2);\r\n        this.set(x, y, bufferB);\r\n        this.set(x2, y2, bufferA);\r\n    }\r\n    fixCoords(x: number, y: number): [number, number] {\r\n        return [\r\n            fixNumber(0, this.width, x),\r\n            fixNumber(0, this.height, y),\r\n        ];\r\n    }\r\n    randCoords(): [number, number] {\r\n        return [\r\n            randInt(0, this.width),\r\n            randInt(0, this.height)\r\n        ];\r\n    }\r\n    randEmpty(): [number, number] {\r\n        let coords: [number, number];\r\n        do {\r\n            coords = this.randCoords();\r\n        } while (this.get(...coords));\r\n        return coords;\r\n    }\r\n}\r\n","import { interpolate, limNumber, randFloat, randInt } from \"./math-functions\";\r\n\r\nexport class Rgba {\r\n    private static readonly MAX_DIF = 255 * 4;\r\n    static randRgb(): Rgba {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    constructor(\r\n        readonly red: number,\r\n        readonly green: number,\r\n        readonly blue: number,\r\n        readonly alpha: number\r\n    ) { }\r\n    interpolate(other: Rgba, t: number): Rgba {\r\n        return new Rgba(\r\n            interpolate(this.red, other.red, t),\r\n            interpolate(this.green, other.green, t),\r\n            interpolate(this.blue, other.blue, t),\r\n            interpolate(this.alpha, other.alpha, t)\r\n        );\r\n    }\r\n    normalise(): Rgba {\r\n        return new Rgba(\r\n            limNumber(0, 255, this.red),\r\n            limNumber(0, 255, this.green),\r\n            limNumber(0, 255, this.blue),\r\n            limNumber(0, 255, this.alpha)\r\n        );\r\n    }\r\n    mutateRgb(value: number): Rgba {\r\n        return new Rgba(\r\n            this.red + randFloat(-value, value),\r\n            this.green + randFloat(-value, value),\r\n            this.blue + randFloat(-value, value),\r\n            this.alpha\r\n        ).normalise();\r\n    }\r\n    difference(other: Rgba): number {\r\n        return ((\r\n            Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)\r\n        ) / Rgba.MAX_DIF);\r\n    }\r\n}\r\n\r\nexport class Canvas {\r\n    readonly node: HTMLCanvasElement;\r\n    readonly ctx: CanvasRenderingContext2D;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n}\r\n\r\nexport class PixelsData extends Canvas {\r\n    readonly data: ImageData;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.getImageData(\r\n            0,\r\n            0,\r\n            this.node.width,\r\n            this.node.height\r\n        );\r\n    }\r\n    setPixel(x: number, y: number, color: Rgba) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}\r\n","export function* range(from: number, to: number) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\n\r\nexport function randFloat(bottom: number, top: number) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\n\r\nexport function randInt(bottom: number, top: number) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\n\r\nexport function randChoice<T>(arr: T[]): T {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\n\r\nexport function fixNumber(min: number, max: number, number: number): number {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\n\r\nexport function normalizeNumber(\r\n    min: number,\r\n    max: number,\r\n    number: number\r\n): number {\r\n    return (number - min) / (max - min);\r\n}\r\n\r\nexport function limNumber(min: number, max: number, number: number): number {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\n\r\nexport function interpolate(a: number, b: number, t: number): number {\r\n    return a + (b - a) * t;\r\n}\r\n","import { Canvas, PixelsData, Rgba } from \"./drawing\";\r\nimport Grid from \"./Grid\";\r\nimport { fixNumber, randInt, range } from \"./math-functions\";\r\n\r\nexport class Block {\r\n    constructor(\r\n        readonly world: World,\r\n        public x: number,\r\n        public y: number,\r\n        public color: Rgba\r\n    ) {\r\n        world.set(x, y, this);\r\n    }\r\n}\r\n\r\nexport class DynamicBlock extends Block {\r\n    alive: boolean;\r\n    constructor(world: World, x: number, y: number, color: Rgba) {\r\n        super(world, x, y, color);\r\n        world.assign(this);\r\n        this.alive = true;\r\n    }\r\n    onStep() {\r\n\r\n    }\r\n    onDie() {\r\n\r\n    }\r\n}\r\n\r\nexport class World extends Grid<Block | undefined> {\r\n    private readonly img: Canvas;\r\n    private dynamic: { a: any; b: any; };\r\n    constructor(\r\n        readonly width: number,\r\n        readonly height: number,\r\n        pixelSize: number,\r\n        node: HTMLCanvasElement\r\n    ) {\r\n        super(width, height);\r\n        this.img = new Canvas(width * pixelSize, height * pixelSize, node);\r\n        this.img.ctx.imageSmoothingEnabled = false;\r\n        this.dynamic = { a: {}, b: {} };\r\n    }\r\n    set(x: number, y: number, block: Block | undefined) {\r\n        super.set(x, y, block);\r\n        if (block) {\r\n            block.x = x;\r\n            block.y = y;\r\n        }\r\n    }\r\n    drawLayer(layer: CanvasImageSource) {\r\n        this.img.ctx.drawImage(\r\n            layer,\r\n            0,\r\n            0,\r\n            this.img.node.width,\r\n            this.img.node.height\r\n        );\r\n    }\r\n    clearImage() {\r\n        this.img.ctx.clearRect(\r\n            0,\r\n            0,\r\n            this.img.node.width,\r\n            this.img.node.height\r\n        );\r\n    }\r\n    visualize(func: (block: any | undefined, x: number, y: number) => Rgba | null) {\r\n        let img = new PixelsData(this.width, this.height);\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                const col = func(this.get(x, y), x, y);\r\n                if (col) {\r\n                    img.setPixel(x, y, col);\r\n                }\r\n            }\r\n        }\r\n        this.drawLayer(img.update().node);\r\n    }\r\n    assign(block: DynamicBlock) {\r\n        let i: number;\r\n        do {\r\n            i = randInt(0, this.width * this.height * 1000);\r\n        } while (this.dynamic.a[i]);\r\n        this.dynamic.a[i] = block;\r\n    }\r\n    init() {\r\n        this.dynamic.b = this.dynamic.a;\r\n    }\r\n    step() {\r\n        this.dynamic.a = {};\r\n        for (const key in this.dynamic.b) {\r\n            const block: DynamicBlock = this.dynamic.b[key];\r\n            if (!block.alive) {\r\n                this.set(block.x, block.y, undefined);\r\n                block.onDie();\r\n            } else {\r\n                block.onStep();\r\n                this.assign(block);\r\n            }\r\n        }\r\n        this.dynamic.b = this.dynamic.a;\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Bot, { Genome } from \"./lib/Bot\";\r\nimport { Rgba } from \"./lib/drawing\";\r\nimport { normalizeNumber } from \"./lib/math-functions\";\r\nimport { Block, World } from \"./lib/world\";\r\n\r\nfunction start() {\r\n\r\n    Bot.amount = 0;\r\n\r\n    world = new World(\r\n        parseInt((document.querySelector('#input-width') as HTMLInputElement).value),\r\n        parseInt((document.querySelector('#input-height') as HTMLInputElement).value),\r\n        parseInt((document.querySelector('#input-pixel') as HTMLInputElement).value),\r\n        document.querySelector('#img') as HTMLCanvasElement\r\n    );\r\n\r\n    const BOTS_AMOUNT = parseInt((document.querySelector('#input-bots') as HTMLInputElement).value);\r\n\r\n    for (let i = 0; i < Math.min(world.width * world.height, BOTS_AMOUNT); i++) {\r\n        const a = new Bot(\r\n            world,\r\n            ...world.randEmpty(),\r\n            new Rgba(100, 100, 100, 255),\r\n            100,\r\n            new Genome(64).fillRandom(),\r\n            Rgba.randRgb(),\r\n            { photo: 0.5, attack: 0.5 }\r\n        );\r\n        a.narrow = 0;\r\n    }\r\n\r\n    world.init();\r\n}\r\n\r\nfunction drawColors(block: any) {\r\n    if (block instanceof Block) {\r\n        return block.color;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction drawEnergy(block: any) {\r\n    if (block instanceof Bot) {\r\n        return new Rgba(0, 0, 255, 255)\r\n            .interpolate(\r\n                new Rgba(255, 255, 0, 255),\r\n                block.energy / 100\r\n            );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction drawAbilities(block: any) {\r\n    if (block instanceof Bot) {\r\n        return new Rgba(\r\n            normalizeNumber(0.5, 1, block.abilities.attack) * 255,\r\n            normalizeNumber(0.5, 1, block.abilities.photo) * 255,\r\n            50,\r\n            255\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction drawFamilies(bot: any) {\r\n    if (bot instanceof Bot) {\r\n        return bot.family;\r\n    }\r\n    return null;\r\n}\r\n\r\nlet world: World;\r\n\r\nwindow.addEventListener('load', () => {\r\n    const $amount = document.querySelector('#amount') as HTMLElement;\r\n    const $fps = document.querySelector('#fps') as HTMLElement;\r\n    const $viewMode = document.querySelector('#view-mode') as HTMLSelectElement;\r\n    document.querySelector('#btn-start')?.addEventListener('click', start);\r\n    start();\r\n\r\n    let cycle = 0;\r\n    let lastLoop = performance.now();\r\n    let fps = 0;\r\n    let fpsList = new Array(5).fill(0);\r\n    setInterval(() => {\r\n        let thisLoop = performance.now();\r\n        fps = 1000 / (thisLoop - lastLoop);\r\n        fpsList.pop();\r\n        fpsList.unshift(fps);\r\n        lastLoop = thisLoop;\r\n        world.step();\r\n        if (cycle % 1 === 0) {\r\n            switch ($viewMode.value) {\r\n                case 'normal': world.clearImage(); world.visualize(drawColors); break;\r\n                case 'energy': world.clearImage(); world.visualize(drawEnergy); break;\r\n                case 'families': world.clearImage(); world.visualize(drawFamilies); break;\r\n                case 'abilities': world.clearImage(); world.visualize(drawAbilities); break;\r\n                default: break;\r\n            }\r\n        }\r\n        // world.clearImage(); world.visualize(drawLight);\r\n        $amount.innerHTML = Bot.amount.toString();\r\n        $fps.innerHTML = (fpsList.reduce((a, b) => a + b) / fpsList.length).toFixed(1);\r\n        cycle++;\r\n    });\r\n\r\n    // (function loop() {\r\n    //     let thisLoop = performance.now();\r\n    //     fps = 1000 / (thisLoop - lastLoop);\r\n    //     fpsList.pop();\r\n    //     fpsList.unshift(fps);\r\n    //     lastLoop = thisLoop;\r\n    //     world.step();\r\n    //     if (cycle % 1 === 0) {\r\n    //         switch ($viewMode.value) {\r\n    //             case 'normal': world.clearImage(); world.visualize(drawColors); break;\r\n    //             case 'energy': world.clearImage(); world.visualize(drawEnergy); break;\r\n    //             case 'families': world.clearImage(); world.visualize(drawFamilies); break;\r\n    //             case 'abilities': world.clearImage(); world.visualize(drawAbilities); break;\r\n    //             default: break;\r\n    //         }\r\n    //     }\r\n    //     // world.clearImage(); world.visualize(drawLight);\r\n    //     $amount.innerHTML = Bot.amount.toString();\r\n    //     $fps.innerHTML = (fpsList.reduce((a, b) => a + b) / fpsList.length).toFixed(1);\r\n    //     cycle++;\r\n    //     requestAnimationFrame(loop);\r\n    // })();\r\n});"],"sourceRoot":""}