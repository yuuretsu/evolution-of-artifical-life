{"version":3,"sources":["webpack://artifical-life/./src/lib/Bot.ts","webpack://artifical-life/./src/lib/Grid.ts","webpack://artifical-life/./src/lib/drawing.ts","webpack://artifical-life/./src/lib/math-functions.ts","webpack://artifical-life/./src/lib/view-modes.ts","webpack://artifical-life/./src/lib/world.ts","webpack://artifical-life/./src/main.ts","webpack://artifical-life/webpack/bootstrap","webpack://artifical-life/webpack/startup"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["import { Rgba } from \"./drawing\";\r\nimport { fixNumber, limNumber, randChoice, randFloat, randInt } from \"./math-functions\";\r\nimport { DynamicBlock, MOORE_NEIGHBOURHOOD, World } from \"./world\";\r\n\r\nexport default class Bot extends DynamicBlock {\r\n    static amount = 0;\r\n    private _narrow: number;\r\n    age: number;\r\n    lastAction: { name: string, color: Rgba };\r\n    constructor(\r\n        world: World,\r\n        x: number,\r\n        y: number,\r\n        color: Rgba,\r\n        public energy: number,\r\n        public genome: Genome,\r\n        public family: Rgba,\r\n        public abilities: {\r\n            photo: number,\r\n            attack: number\r\n        }\r\n    ) {\r\n        super(world, x, y, color);\r\n        Bot.amount++;\r\n        this._narrow = randInt(0, 8);\r\n        this.age = 0;\r\n        this.lastAction = { name: 'none', color: new Rgba(20, 20, 20, 255) };\r\n    }\r\n    set narrow(n: number) {\r\n        this._narrow = fixNumber(0, 8, n);\r\n    }\r\n    get narrow(): number {\r\n        return this._narrow;\r\n    }\r\n    narrowToCoords(): [number, number] {\r\n        const x = this.x + MOORE_NEIGHBOURHOOD[this.narrow][0];\r\n        const y = this.y + MOORE_NEIGHBOURHOOD[this.narrow][1];\r\n        return this.world.fixCoords(x, y);\r\n    }\r\n    getForvard() {\r\n        const coords = this.narrowToCoords();\r\n        return { block: this.world.get(...coords), coords: coords };\r\n    }\r\n    moveTo(x: number, y: number) {\r\n        this.world.swap(this.x, this.y, x, y);\r\n    }\r\n    multiplyTo(x: number, y: number) {\r\n        new Bot(\r\n            this.world,\r\n            x,\r\n            y,\r\n            this.color.interpolate(new Rgba(255, 255, 255, 255), 0.25),\r\n            this.energy / 3,\r\n            this.genome.replication(),\r\n            this.family.mutateRgb(10),\r\n            { ...this.abilities }\r\n        );\r\n        this.energy /= 3;\r\n    }\r\n    randMove() {\r\n        const coords = this.world.fixCoords(\r\n            this.x + randInt(-1, 2),\r\n            this.y + randInt(-1, 2)\r\n        );\r\n        this.moveTo(...coords);\r\n    }\r\n    onStep() {\r\n        if (this.energy < 1 || this.energy > 100 || this.age > 2000) {\r\n            this.alive = false;\r\n            return;\r\n        }\r\n        this.genome.doAction(this);\r\n        this.energy -= 0.1;\r\n        this.age += 1;\r\n    }\r\n    onDie() {\r\n        Bot.amount--;\r\n        // new DeadBot(this);\r\n    }\r\n}\r\n\r\nclass DeadBot extends DynamicBlock {\r\n    age: number;\r\n    constructor(bot: Bot) {\r\n        super(bot.world, bot.x, bot.y, bot.color.interpolate(new Rgba(0, 0, 0, 255), 0.5));\r\n        this.age = 0;\r\n    }\r\n    onStep() {\r\n        if (this.age > 500) {\r\n            this.alive = false;\r\n        }\r\n        this.color = this.color.interpolate(new Rgba(10, 10, 50, 255), 0.005);\r\n        this.age++;\r\n    }\r\n}\r\n\r\nexport class Genome {\r\n    genes: Gene[];\r\n    private _pointer: number;\r\n    constructor(readonly length: number) {\r\n        this.genes = [];\r\n        this._pointer = 0;\r\n    }\r\n    set pointer(n: number) {\r\n        this._pointer = fixNumber(0, this.length, n);\r\n    }\r\n    get pointer() {\r\n        return this._pointer;\r\n    }\r\n    randGene(): Gene {\r\n        return {\r\n            action: randChoice(GENE_TEMPLATES),\r\n            property: Math.random(),\r\n            branches: [\r\n                randInt(0, this.length),\r\n                randInt(0, this.length),\r\n                randInt(0, this.length),\r\n                randInt(0, this.length)\r\n            ]\r\n        };\r\n    }\r\n    mutateGene(gene: Gene): Gene {\r\n        return {\r\n            action: Math.random() > 0.9 ? randChoice(GENE_TEMPLATES) : gene.action,\r\n            property: limNumber(0, 1, gene.property + randFloat(-0.01, 0.01)),\r\n            branches: gene.branches.map(\r\n                i => Math.random() > 0.9\r\n                    ? randInt(0, this.length)\r\n                    : i\r\n            ) as [number, number, number, number]\r\n        }\r\n    }\r\n    fillRandom(start: number = 0): this {\r\n        for (let i = start; i < this.length; i++) {\r\n            this.genes[i] = this.randGene();\r\n        }\r\n        return this;\r\n    }\r\n    create(genes: Gene[]): this {\r\n        for (let i = 0; i < genes.length; i++) {\r\n            this.genes[i] = genes[i];\r\n        }\r\n        this.fillRandom(genes.length);\r\n        return this;\r\n    }\r\n    fillPlant(): this {\r\n        for (let i = 0; i < this.length; i++) {\r\n            this.genes[i] = {\r\n                action: GENE_TEMPLATES[randInt(0, 3)],\r\n                property: Math.random(),\r\n                branches: [\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length),\r\n                    randInt(0, this.length)\r\n                ]\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    // replication2() {\r\n    //     const genome = new Genome(this.length);\r\n    //     for (let i = 0; i < this.length; i++) {\r\n    //         genome.genes[i] = this.mutateGene(this.genes[i]);\r\n    //     }\r\n    //     return genome;\r\n    // }\r\n    // replication() {\r\n    //     const genome = new Genome(this.length);\r\n    //     for (let i = 0; i < this.length; i++) {\r\n    //         genome.genes[i] = this.genes[i];\r\n    //     }\r\n    //     const pointer = randInt(0, genome.length);\r\n    //     genome.genes[pointer] = this.mutateGene(this.genes[pointer]);\r\n    //     return genome;\r\n    // }\r\n    replication() {\r\n        const genome = new Genome(this.length);\r\n        for (let i = 0; i < this.length; i++) {\r\n            genome.genes[i] = Math.random() > 0.995\r\n                ? this.mutateGene(this.genes[i])\r\n                : this.genes[i];\r\n        }\r\n        return genome;\r\n    }\r\n    doAction(bot: Bot) {\r\n        bot.lastAction = { name: 'none', color: new Rgba(20, 20, 20, 255) };\r\n        for (let i = 0; i < 20; i++) {\r\n            const GENE: Gene = this.genes[this.pointer];\r\n            const RESULT = GENE.action(bot, GENE.property, GENE.branches);\r\n            if (RESULT.goto) {\r\n                this.pointer = RESULT.goto;\r\n            } else {\r\n                this.pointer++;\r\n            }\r\n            if (RESULT.completed) return;\r\n        }\r\n        bot.color = bot.color.interpolate(new Rgba(100, 100, 100, 255), 0.1);\r\n    }\r\n}\r\n\r\ntype ActionResult = { completed: boolean, goto?: number }\r\n\r\ntype ActionFn = (\r\n    bot: Bot,\r\n    property: number,\r\n    branches: [number, number, number, number]\r\n) => ActionResult;\r\n\r\ntype Gene = {\r\n    action: ActionFn,\r\n    property: number,\r\n    branches: [number, number, number, number]\r\n}\r\n\r\nconst GENE_TEMPLATES: ActionFn[] = [\r\n    // Restart\r\n    (bot, property, branches) => {\r\n        return { completed: false, goto: 0 }\r\n    },\r\n\r\n    // Photosynthesis\r\n    (bot, property, branches) => {\r\n        bot.energy += 0.5 * bot.abilities.photo ** 2;\r\n        bot.abilities.photo = Math.min(1, bot.abilities.photo + 0.01);\r\n        bot.abilities.attack = Math.max(0, bot.abilities.attack - 0.01);\r\n        bot.color = bot.color.interpolate(new Rgba(0, 255, 0, 255), 0.01);\r\n        bot.lastAction = { name: 'view-photosynthesis', color: new Rgba(0, 200, 0, 255) }\r\n        return { completed: true }\r\n    },\r\n\r\n    // Rotate\r\n    (bot, property, branches) => {\r\n        if (property > 0.5) {\r\n            bot.narrow++;\r\n        } else {\r\n            bot.narrow--;\r\n        }\r\n        return { completed: false }\r\n    },\r\n\r\n    // Multiply\r\n    (bot, property, branches) => {\r\n        const forward = bot.getForvard();\r\n        if (!forward.block && bot.age > 2) {\r\n            bot.multiplyTo(...forward.coords);\r\n            bot.lastAction = { name: 'view-multiply', color: new Rgba(0, 0, 200, 255) };\r\n        }\r\n        // bot.lastAction = new Rgba(0, 0, 255, 255);\r\n        return { completed: true }\r\n    },\r\n\r\n    // Share energy\r\n    (bot, property, branches) => {\r\n        bot.color = bot.color.interpolate(new Rgba(0, 0, 255, 255), 0.005);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot && forward.block.energy < bot.energy) {\r\n            const E = (forward.block.energy + bot.energy) / 2;\r\n            bot.energy = E;\r\n            forward.block.energy = E;\r\n            bot.lastAction = { name: 'view-share-energy', color: new Rgba(0, 200, 200, 255) };\r\n        }\r\n        // bot.lastAction = new Rgba(0, 100, 255, 255);\r\n        return { completed: true }\r\n    },\r\n\r\n    // Look forward\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(255, 255, 255, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot) {\r\n            if (forward.block.family.difference(bot.color) < property) {\r\n                return { completed: false, goto: branches[0] }\r\n            } else {\r\n                return { completed: false, goto: branches[1] }\r\n            }\r\n        } else if (forward.block instanceof DeadBot) {\r\n            return { completed: false, goto: branches[2] }\r\n        } else {\r\n            return { completed: false, goto: branches[3] }\r\n        }\r\n    },\r\n\r\n    (bot, property, branches) => {\r\n        if (bot.energy / 100 < property) {\r\n            return { completed: false, goto: branches[0] }\r\n        } else {\r\n            return { completed: false, goto: branches[1] }\r\n        }\r\n    },\r\n\r\n    // DestroyDead\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(0, 0, 255, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof DeadBot && forward.block.age > 2) {\r\n            forward.block.alive = false;\r\n            // bot.lastAction = new Rgba(255, 255, 0, 255);\r\n        }\r\n        // bot.lastAction = new Rgba(255, 255, 0, 255);\r\n        return { completed: true }\r\n    },\r\n\r\n    // Move\r\n    (bot, property, branches) => {\r\n        // bot.color = bot.color.interpolate(new Rgba(255, 0, 0, 255), 0.01);\r\n        const forward = bot.getForvard();\r\n        if (!forward.block) bot.moveTo(...forward.coords);\r\n        bot.lastAction = { name: 'view-move', color: new Rgba(200, 200, 200, 255) };\r\n        return { completed: true }\r\n    },\r\n\r\n    // // Move 2\r\n    // (bot, property, branches) => {\r\n    //     // bot.color = bot.color.interpolate(new Rgba(255, 255, 255, 255), 0.01);\r\n    //     const forward = bot.getForvard();\r\n    //     bot.moveTo(...forward.coords);\r\n    //     bot.energy -= 0.1;\r\n    //     return { completed: true }\r\n    // },\r\n\r\n    // Kill\r\n    (bot, property, branches) => {\r\n        bot.energy -= 0.1;\r\n        bot.color = bot.color.interpolate(new Rgba(255, 0, 0, 255), 0.01);\r\n        bot.abilities.attack = Math.min(1, bot.abilities.attack + 0.01);\r\n        bot.abilities.photo = Math.max(0, bot.abilities.photo - 0.01);\r\n        const forward = bot.getForvard();\r\n        if (forward.block instanceof Bot) {\r\n            const E = (forward.block.energy / 2) * bot.abilities.attack ** 2;\r\n            forward.block.energy -= forward.block.energy / 2;\r\n            bot.energy += E;\r\n            bot.lastAction = { name: 'view-attack', color: new Rgba(200, 0, 0, 255) };\r\n        }\r\n        // bot.lastAction = new Rgba(255, 0, 0, 255);\r\n        return { completed: true }\r\n    },\r\n\r\n    // // Virus\r\n    // (bot, property, branches) => {\r\n    //     bot.color = bot.color.interpolate(new Rgba(255, 0, 255, 255), 0.01);\r\n    //     const forward = bot.getForvard();\r\n    //     if (forward.block instanceof Bot) {\r\n    //         forward.block.genome = bot.genome.replication();\r\n    //         bot.lastAction = new Rgba(255, 0, 255, 255);\r\n    //     }\r\n    //     return { completed: true }\r\n    // }\r\n];","import { fixNumber, randInt } from \"./math-functions\";\r\n\r\nexport default class Grid<T> {\r\n    private readonly cells: (T | undefined)[][];\r\n    constructor(readonly width: number, readonly height: number) {\r\n        this.cells = [];\r\n        for (let x = 0; x < width; x++) {\r\n            this.cells[x] = [];\r\n        }\r\n    }\r\n    get(x: number, y: number): T | undefined {\r\n        return this.cells[x][y];\r\n    }\r\n    set(x: number, y: number, value: T | undefined) {\r\n        this.cells[x][y] = value;\r\n    }\r\n    remove(x: number, y: number) {\r\n        delete this.cells[x][y];\r\n    }\r\n    swap(x: number, y: number, x2: number, y2: number) {\r\n        const bufferA = this.get(x, y);\r\n        const bufferB = this.get(x2, y2);\r\n        this.set(x, y, bufferB);\r\n        this.set(x2, y2, bufferA);\r\n    }\r\n    fixCoords(x: number, y: number): [number, number] {\r\n        return [\r\n            fixNumber(0, this.width, x),\r\n            fixNumber(0, this.height, y),\r\n        ];\r\n    }\r\n    randCoords(): [number, number] {\r\n        return [\r\n            randInt(0, this.width),\r\n            randInt(0, this.height)\r\n        ];\r\n    }\r\n    randEmpty(): [number, number] {\r\n        let coords: [number, number];\r\n        do {\r\n            coords = this.randCoords();\r\n        } while (this.get(...coords));\r\n        return coords;\r\n    }\r\n}\r\n","import { interpolate, limNumber, randFloat, randInt } from \"./math-functions\";\r\n\r\nexport class Rgba {\r\n    private static readonly MAX_DIF = 255 * 4;\r\n    static randRgb(): Rgba {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    constructor(\r\n        readonly red: number,\r\n        readonly green: number,\r\n        readonly blue: number,\r\n        readonly alpha: number\r\n    ) { }\r\n    interpolate(other: Rgba, t: number): Rgba {\r\n        return new Rgba(\r\n            interpolate(this.red, other.red, t),\r\n            interpolate(this.green, other.green, t),\r\n            interpolate(this.blue, other.blue, t),\r\n            interpolate(this.alpha, other.alpha, t)\r\n        );\r\n    }\r\n    normalise(): Rgba {\r\n        return new Rgba(\r\n            limNumber(0, 255, this.red),\r\n            limNumber(0, 255, this.green),\r\n            limNumber(0, 255, this.blue),\r\n            limNumber(0, 255, this.alpha)\r\n        );\r\n    }\r\n    mutateRgb(value: number): Rgba {\r\n        return new Rgba(\r\n            this.red + randFloat(-value, value),\r\n            this.green + randFloat(-value, value),\r\n            this.blue + randFloat(-value, value),\r\n            this.alpha\r\n        ).normalise();\r\n    }\r\n    difference(other: Rgba): number {\r\n        return ((\r\n            Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)\r\n        ) / Rgba.MAX_DIF);\r\n    }\r\n}\r\n\r\nexport class Canvas {\r\n    readonly node: HTMLCanvasElement;\r\n    readonly ctx: CanvasRenderingContext2D;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n}\r\n\r\nexport class PixelsData extends Canvas {\r\n    readonly data: ImageData;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.getImageData(\r\n            0,\r\n            0,\r\n            this.node.width,\r\n            this.node.height\r\n        );\r\n    }\r\n    setPixel(x: number, y: number, color: Rgba) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}\r\n","export function* range(from: number, to: number) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\n\r\nexport function randFloat(bottom: number, top: number) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\n\r\nexport function randInt(bottom: number, top: number) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\n\r\nexport function randChoice<T>(arr: T[]): T {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\n\r\nexport function fixNumber(min: number, max: number, number: number): number {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\n\r\nexport function normalizeNumber(\r\n    min: number,\r\n    max: number,\r\n    number: number\r\n): number {\r\n    return (number - min) / (max - min);\r\n}\r\n\r\nexport function limNumber(min: number, max: number, number: number): number {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\n\r\nexport function interpolate(a: number, b: number, t: number): number {\r\n    return a + (b - a) * t;\r\n}\r\n","import Bot from \"./Bot\";\r\nimport { PixelsData, Rgba } from \"./drawing\";\r\nimport { normalizeNumber } from \"./math-functions\";\r\nimport { Block, MOORE_NEIGHBOURHOOD, World } from \"./world\";\r\n\r\nexport function drawColors(block: any) {\r\n    if (block instanceof Block) {\r\n        return block.color;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function drawEnergy(block: any) {\r\n    if (block instanceof Bot) {\r\n        return new Rgba(20, 20, 100, 255)\r\n            .interpolate(\r\n                new Rgba(255, 255, 0, 255),\r\n                block.energy / 100\r\n            );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function drawAbilities(block: any) {\r\n    if (block instanceof Bot) {\r\n        return new Rgba(\r\n            normalizeNumber(0.5, 1, block.abilities.attack) * 255,\r\n            normalizeNumber(0.5, 1, block.abilities.photo) * 255,\r\n            50,\r\n            255\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function drawFamilies(block: any) {\r\n    if (block instanceof Bot) {\r\n        return block.family;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function drawLastAction(options: any): (block: any) => Rgba | null {\r\n    return function (block) {\r\n        if (block instanceof Bot) {\r\n            return options[block.lastAction.name] ? block.lastAction.color : new Rgba(20, 20, 20, 255);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getNarrowImg(world: World): HTMLCanvasElement {\r\n    const img = new PixelsData(world.width * 3, world.height * 3);\r\n    for (let x = 0; x < world.width; x++) {\r\n        for (let y = 0; y < world.height; y++) {\r\n            const block = world.get(x, y);\r\n            if (block instanceof Bot) {\r\n                const xy: [number, number] = [\r\n                    block.x * 3 + 1 + MOORE_NEIGHBOURHOOD[block.narrow][0],\r\n                    block.y * 3 + 1 + MOORE_NEIGHBOURHOOD[block.narrow][1],\r\n                ];\r\n                img.setPixel(...xy, new Rgba(0, 0, 0, 127));\r\n            }\r\n        }\r\n    }\r\n    img.update();\r\n    return img.node;\r\n}","import { Canvas, PixelsData, Rgba } from \"./drawing\";\r\nimport Grid from \"./Grid\";\r\nimport { fixNumber, randInt, range } from \"./math-functions\";\r\n\r\nexport const MOORE_NEIGHBOURHOOD: [number, number][] = [\r\n    [-1, -1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n    [-1, 1],\r\n    [-1, 0],\r\n];\r\n\r\nexport class Block {\r\n    constructor(\r\n        readonly world: World,\r\n        public x: number,\r\n        public y: number,\r\n        public color: Rgba\r\n    ) {\r\n        world.set(x, y, this);\r\n    }\r\n}\r\n\r\nexport class DynamicBlock extends Block {\r\n    alive: boolean;\r\n    constructor(world: World, x: number, y: number, color: Rgba) {\r\n        super(world, x, y, color);\r\n        world.assign(this);\r\n        this.alive = true;\r\n    }\r\n    onStep() {\r\n\r\n    }\r\n    onDie() {\r\n\r\n    }\r\n}\r\n\r\nexport class World extends Grid<Block | undefined> {\r\n    private readonly img: Canvas;\r\n    private dynamic: { a: any; b: any; };\r\n    age: number;\r\n    constructor(\r\n        readonly width: number,\r\n        readonly height: number,\r\n        pixelSize: number,\r\n        node: HTMLCanvasElement\r\n    ) {\r\n        super(width, height);\r\n        this.img = new Canvas(width * pixelSize, height * pixelSize, node);\r\n        this.img.ctx.imageSmoothingEnabled = false;\r\n        this.dynamic = { a: {}, b: {} };\r\n        this.age = 0;\r\n    }\r\n    set(x: number, y: number, block: Block | undefined) {\r\n        super.set(x, y, block);\r\n        if (block) {\r\n            block.x = x;\r\n            block.y = y;\r\n        }\r\n    }\r\n    drawLayer(layer: CanvasImageSource) {\r\n        this.img.ctx.drawImage(\r\n            layer,\r\n            0,\r\n            0,\r\n            this.img.node.width,\r\n            this.img.node.height\r\n        );\r\n    }\r\n    clearImage() {\r\n        this.img.ctx.clearRect(\r\n            0,\r\n            0,\r\n            this.img.node.width,\r\n            this.img.node.height\r\n        );\r\n    }\r\n    visualize(func: (block: any | undefined, x: number, y: number) => Rgba | null) {\r\n        let img = new PixelsData(this.width, this.height);\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                const col = func(this.get(x, y), x, y);\r\n                if (col) {\r\n                    img.setPixel(x, y, col);\r\n                }\r\n            }\r\n        }\r\n        this.drawLayer(img.update().node);\r\n    }\r\n    assign(block: DynamicBlock) {\r\n        let i: number;\r\n        do {\r\n            i = randInt(0, this.width * this.height * 1000);\r\n        } while (this.dynamic.a[i]);\r\n        this.dynamic.a[i] = block;\r\n    }\r\n    init() {\r\n        this.dynamic.b = this.dynamic.a;\r\n    }\r\n    step() {\r\n        this.dynamic.a = {};\r\n        for (const key in this.dynamic.b) {\r\n            const block: DynamicBlock = this.dynamic.b[key];\r\n            if (!block.alive) {\r\n                this.set(block.x, block.y, undefined);\r\n                block.onDie();\r\n            } else {\r\n                block.onStep();\r\n                this.assign(block);\r\n            }\r\n        }\r\n        this.dynamic.b = this.dynamic.a;\r\n        this.age++;\r\n    }\r\n}\r\n","import Bot, { Genome } from \"./lib/Bot\";\r\nimport { Rgba } from \"./lib/drawing\";\r\nimport { limNumber } from \"./lib/math-functions\";\r\nimport {\r\n    drawColors,\r\n    drawEnergy,\r\n    drawFamilies,\r\n    drawAbilities,\r\n    drawLastAction,\r\n    getNarrowImg\r\n} from \"./lib/view-modes\";\r\nimport { Block, World } from \"./lib/world\";\r\n\r\nfunction onResizeWindow() {\r\n    (document.querySelector('.wrapper') as HTMLElement).style.maxHeight = `${window.innerHeight}px`;\r\n}\r\n\r\nfunction start() {\r\n\r\n    (document.querySelector('#img') as HTMLElement).style.transform = `none`;\r\n\r\n    Bot.amount = 0;\r\n\r\n    world = new World(\r\n        parseInt((document.querySelector('#input-width') as HTMLInputElement).value),\r\n        parseInt((document.querySelector('#input-height') as HTMLInputElement).value),\r\n        parseInt((document.querySelector('#input-pixel') as HTMLInputElement).value),\r\n        document.querySelector('#img') as HTMLCanvasElement\r\n    );\r\n\r\n    // for (let x = 0; x < world.width; x++) {\r\n    //     new Block(\r\n    //         world,\r\n    //         x,\r\n    //         0,\r\n    //         new Rgba(127, 127, 127, 255)\r\n    //     );\r\n    // }\r\n\r\n    // for (let y = 1; y < world.height; y++) {\r\n    //     new Block(\r\n    //         world,\r\n    //         0,\r\n    //         y,\r\n    //         new Rgba(127, 127, 127, 255)\r\n    //     );\r\n    // }\r\n\r\n    const BOTS_AMOUNT = parseInt((document.querySelector('#input-bots') as HTMLInputElement).value);\r\n\r\n    for (let i = 0; i < Math.min(world.width * world.height, BOTS_AMOUNT); i++) {\r\n        const a = new Bot(\r\n            world,\r\n            ...world.randEmpty(),\r\n            new Rgba(100, 100, 100, 255),\r\n            100,\r\n            new Genome(64).fillRandom(),\r\n            Rgba.randRgb(),\r\n            { photo: 0.5, attack: 0.5 }\r\n        );\r\n    }\r\n\r\n    world.init();\r\n}\r\n\r\n\r\n// TODO типизировать options\r\nfunction updateImage(world: World, mode: string, options: any, drawBotsNarrow: boolean) {\r\n    switch (mode) {\r\n        case 'normal': world.clearImage(); world.visualize(drawColors); break;\r\n        case 'energy': world.clearImage(); world.visualize(drawEnergy); break;\r\n        case 'families': world.clearImage(); world.visualize(drawFamilies); break;\r\n        case 'abilities': world.clearImage(); world.visualize(drawAbilities); break;\r\n        case 'last-action': world.clearImage(); world.visualize(drawLastAction(options)); break;\r\n        default: break;\r\n    }\r\n    if (drawBotsNarrow) {\r\n        world.drawLayer(getNarrowImg(world));\r\n    }\r\n}\r\n\r\nlet world: World;\r\n\r\nwindow.addEventListener('resize', onResizeWindow);\r\n\r\nwindow.addEventListener('load', () => {\r\n\r\n    onResizeWindow();\r\n\r\n    const $inputFps = document.querySelector('#input-fps') as HTMLInputElement;\r\n\r\n    document.querySelectorAll(\r\n        '#input-width, #input-height, #input-pixel, #input-fps'\r\n    ).forEach(elem => {\r\n        elem.addEventListener('change', event => {\r\n            const target = event.target as HTMLInputElement;\r\n            target.value = limNumber(\r\n                parseInt(target.min),\r\n                parseInt(target.max),\r\n                parseInt(target.value)\r\n            ).toString();\r\n        })\r\n    });\r\n\r\n    const $imgContainer = document.querySelector('#img-container') as HTMLElement;\r\n    const $img = document.querySelector('#img') as HTMLElement;\r\n\r\n    document.querySelector('#btn-menu')?.addEventListener('change', event => {\r\n        if ((event.target as HTMLInputElement).checked) {\r\n            $imgContainer.classList.add('img-wrapper--menu-opened');\r\n            document.querySelector('#menu')?.classList.add('wrapper__menu--menu-opened');\r\n        } else {\r\n            $imgContainer.classList.remove('img-wrapper--menu-opened');\r\n            document.querySelector('#menu')?.classList.remove('wrapper__menu--menu-opened');\r\n        }\r\n    });\r\n\r\n    let currentX: number;\r\n    let currentY: number;\r\n    let initialX: number;\r\n    let initialY: number;\r\n    let xOffset = 0;\r\n    let yOffset = 0;\r\n    let active = false;\r\n\r\n    function dragStart(e: TouchEvent | MouseEvent) {\r\n        if (e instanceof TouchEvent) {\r\n            initialX = e.touches[0].clientX - xOffset;\r\n            initialY = e.touches[0].clientY - yOffset;\r\n        } else {\r\n            initialX = e.clientX - xOffset;\r\n            initialY = e.clientY - yOffset;\r\n        }\r\n        if (e.target === $img) {\r\n            active = true;\r\n        }\r\n    }\r\n\r\n    function dragEnd() {\r\n        initialX = currentX;\r\n        initialY = currentY;\r\n        active = false;\r\n    }\r\n\r\n    function drag(e: TouchEvent | MouseEvent) {\r\n        if (active) {\r\n            e.preventDefault();\r\n            if (e instanceof TouchEvent) {\r\n                currentX = e.touches[0].clientX - initialX;\r\n                currentY = e.touches[0].clientY - initialY;\r\n            } else {\r\n                currentX = e.clientX - initialX;\r\n                currentY = e.clientY - initialY;\r\n            }\r\n            xOffset = currentX;\r\n            yOffset = currentY;\r\n            $img.style.transform = `translate3d(${currentX}px, ${currentY}px, 0)`;\r\n        }\r\n    }\r\n\r\n    $imgContainer.addEventListener(\"touchstart\", dragStart, false);\r\n    $imgContainer.addEventListener(\"touchend\", dragEnd, false);\r\n    $imgContainer.addEventListener(\"touchmove\", drag, false);\r\n\r\n    $imgContainer.addEventListener(\"mousedown\", dragStart, false);\r\n    $imgContainer.addEventListener(\"mouseup\", dragEnd, false);\r\n    $imgContainer.addEventListener(\"mousemove\", drag, false);\r\n\r\n    type viewActionsMode\r\n        = 'view-photosynthesis'\r\n        | 'view-attack'\r\n        | 'view-multiply'\r\n        | 'view-share-energy'\r\n        | 'view-move'\r\n\r\n    const viewActionsOptions = {\r\n        'view-photosynthesis': true,\r\n        'view-attack': true,\r\n        'view-multiply': true,\r\n        'view-share-energy': true,\r\n        'view-move': true\r\n    }\r\n\r\n    const viewActionsOptionsList: string[] = [];\r\n    for (const actionName in viewActionsOptions) {\r\n        viewActionsOptionsList.push(`#${actionName}`);\r\n    }\r\n\r\n    document.querySelectorAll(viewActionsOptionsList.join(','))\r\n        .forEach(checkbox => {\r\n            const chbx = checkbox as HTMLInputElement;\r\n            chbx.addEventListener('change', () => {\r\n                viewActionsOptions[chbx.id as viewActionsMode] = chbx.checked;\r\n                updateImage(world, $viewMode.value, viewActionsOptions, $narrows.checked);\r\n            });\r\n        });\r\n\r\n    const $amount = document.querySelector('#amount') as HTMLElement;\r\n    const $fps = document.querySelector('#fps') as HTMLElement;\r\n    const $frameNumber = document.querySelector('#frame-number') as HTMLElement;\r\n    const $viewMode = document.querySelector('#view-mode') as HTMLSelectElement;\r\n    $viewMode.addEventListener('change', event => {\r\n        const $viewActions = document.querySelector('#view-actions-options') as HTMLInputElement;\r\n        if ($viewMode.value === 'last-action') {\r\n            $viewActions.classList.remove('hidden');\r\n        } else {\r\n            $viewActions.classList.add('hidden');\r\n        }\r\n        updateImage(world, $viewMode.value, viewActionsOptions, $narrows.checked);\r\n    });\r\n    const $narrows = document.querySelector('#chbx-narrows') as HTMLInputElement;\r\n    const $chbxUpdImg = document.querySelector('#chbx-upd-img') as HTMLInputElement;\r\n    document.querySelector('#btn-start')?.addEventListener('click', start);\r\n    document.querySelector('#btn-step')?.addEventListener('click', () => {\r\n        pauseSimulation();\r\n        world.step();\r\n        updateImage(world, $viewMode.value, viewActionsOptions, $narrows.checked);\r\n    });\r\n    const $btnPause = document.querySelector('#btn-pause') as HTMLButtonElement;\r\n    $btnPause.addEventListener('click', (e) => {\r\n        switch (paused) {\r\n            case true:\r\n                continueSimulation();\r\n                break;\r\n            case false:\r\n                pauseSimulation();\r\n                break;\r\n        }\r\n    });\r\n    start();\r\n\r\n    function continueSimulation() {\r\n        paused = false;\r\n        $chbxUpdImg.checked = true;\r\n    }\r\n\r\n    function pauseSimulation() {\r\n        paused = true;\r\n        $chbxUpdImg.checked = false;\r\n    }\r\n\r\n    let lastLoop = Date.now();\r\n    let fps = 0;\r\n    let paused = false;\r\n    // setInterval(() => {\r\n    //     if (Date.now() - lastLoop > 1000) {\r\n    //         $fps.innerHTML = fps.toFixed(0);\r\n    //         fps = 0;\r\n    //         lastLoop = Date.now();\r\n    //     }\r\n    //     fps++;\r\n    //     if (!paused) world.step();\r\n    //     if ($chbxUpdImg.checked) {\r\n    //         updateImage(world, $viewMode.value, $narrows.checked);\r\n    //     }\r\n    //     $amount.innerHTML = Bot.amount.toString();\r\n    //     $frameNumber.innerHTML = `${(world.age / 1000).toFixed(1)} тыс. кадров`;\r\n    // });\r\n\r\n    (function step() {\r\n        if (Date.now() - lastLoop > 1000) {\r\n            $fps.innerHTML = fps.toFixed(0);\r\n            fps = 0;\r\n            lastLoop = Date.now();\r\n        }\r\n        fps++;\r\n        if (!paused) world.step();\r\n        if ($chbxUpdImg.checked) {\r\n            updateImage(world, $viewMode.value, viewActionsOptions, $narrows.checked);\r\n        }\r\n        $amount.innerHTML = Bot.amount.toString();\r\n        $frameNumber.innerHTML = `${(world.age / 1000).toFixed(1)} тыс. кадров`;\r\n        setTimeout(step, 1000 / parseInt($inputFps.value));\r\n    })();\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n"],"sourceRoot":""}